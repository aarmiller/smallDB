% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_time_map_parallel.R
\name{build_time_map_keys_parallel}
\alias{build_time_map_keys_parallel}
\title{Build time_map keys (in parallel)}
\usage{
build_time_map_keys_parallel(
  collect_tab = collect_table(),
  db_path,
  db_con,
  num_cores = NULL
)
}
\arguments{
\item{collect_tab}{a collection table to build time_map from. By default all years will be used}

\item{db_path}{Path to the database}

\item{db_con}{a connection to a database#'}

\item{num_cores}{The number of worker cores to use. If not specified will use 10. If NULL is specified then it will determine the number of cores based on the which ever
is the smallest value between number of rows in for collect_tab or detected number of cores - 1}
}
\value{
A list containing three tibbles (timemap, outpatient keys, and inpatient keys)
}
\description{
This function goes to the database and assembles all of the inpatient an outpatient visits
(or just the visits specified by a collection table). It then assembles them into a logintudinal
time_map of distinct visits (defined by admission/service date and stdplac). Finally, each
visit is given a distinct visit key. The time_map and the distinct inpatient and outpatient visit keys
are returned as a list. NOTE: This function should generally only be run once after the small DB is
build, and it generally should not be called directly. Use the function `add_time_map_keys()` to add the
time_map keys to the database.
}
